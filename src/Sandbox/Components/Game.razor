@inherits NetworkComponentBase

@inject NetworkManager NetworkManager

<Stack Horizontal="true">
    @foreach (var item in NetworkManager.Query<Player>())
    {
        <Stack ClassName="p-2 border ml-2 items-center mb-2" AdditionalClassName="@GetPlayerClass(item)">
            <p>@item.Id</p>
            <Separator ClassName="mt-1 mb-2 border-t border-gray-400 self-stretch"/>
            <Stack Horizontal="true">
                <DefaultButton Icon="Message" IconClassName="text-xs"/>
                <Separator ClassName="mx-1"/>
                <DefaultButton Icon="ChromeClose" IconClassName="text-xs"/>
            </Stack>
        </Stack>
    }
</Stack>

<Stack ClassName="ml-2 border p-2 w-fit">
    <PrimaryButton Text="Add object" Icon="Add" OnClick="AddObject"/>
    <Stack Horizontal="true" ClassName="justify-evenly gap-2 flex-wrap">
        @foreach (var entity in NetworkManager.Query<Entity>())
        {
            <Stack ClassName="border p-2 border-gray-400 mt-2">
                <DefaultButton Text="@entity.Value.ToString()" OnClick="entity.IncrementValueServer"/>
                <Separator ClassName="my-2 border-t border-gray-400"/>
                <DefaultButton Icon="ChromeClose" IconClassName="text-xs" OnClick="() => DestroyObject(entity)"/>
            </Stack>
        }
    </Stack>
</Stack>

@code {

    private string GetPlayerClass(Player player)
    {
        return player.IsOwner ? "border-red-700" : string.Empty;
    }

    private void AddObject()
    {
        new Entity().Spawn();
    }

    private void DestroyObject(Entity entity)
    {
        entity.Destroy();
    }

}